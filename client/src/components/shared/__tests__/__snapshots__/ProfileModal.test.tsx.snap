// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[ProfileModal] rendering test Render without crashing 1`] = `
<View>
  <View
    accessibilityViewIsModal={true}
    importantForAccessibility="yes"
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "zIndex": 2,
        },
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "backgroundColor": "black",
                "opacity": 0.075,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Object {
            "alignContent": "center",
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "transparent",
            "height": 320,
            "justifyContent": "center",
            "transform": Array [
              Object {
                "translateY": -1334,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "90%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#1E6EFA",
              "height": 300,
              "justifyContent": "space-between",
              "marginHorizontal": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "position": "absolute",
                "right": 8,
                "top": 4,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="touch-done"
            >
              <View
                style={
                  Object {
                    "paddingLeft": 8,
                    "paddingRight": 12,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="touch-done"
            >
              <View
                style={
                  Object {
                    "paddingLeft": 8,
                    "paddingRight": 16,
                    "paddingVertical": 8,
                  }
                }
              >
                <Text />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "marginTop": 64,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": 80,
                    "justifyContent": "center",
                    "width": 80,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "canInstrument": true,
                      "createTransformer": [Function],
                      "getCacheKey": [Function],
                      "process": [Function],
                    }
                  }
                  style={
                    Array [
                      Object {
                        "borderRadius": 40,
                        "height": 80,
                        "width": 80,
                      },
                      Object {
                        "alignSelf": "center",
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "color": "white",
                    "fontSize": 24,
                    "fontWeight": "bold",
                    "marginTop": 16,
                    "paddingBottom": 0,
                    "paddingLeft": 32,
                    "paddingRight": 32,
                    "paddingTop": 0,
                  },
                ]
              }
            >
              Unnamed
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "color": "white",
                    "fontSize": 12,
                    "marginTop": 8,
                  },
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#ffffff",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "height": 80,
                  "justifyContent": "center",
                  "opacity": 1,
                  "width": "50%",
                }
              }
              testID="touch-add-friend"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 80,
                    "justifyContent": "center",
                    "width": "50%",
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#676c7a",
                        "fontSize": 16,
                      },
                    ]
                  }
                  testID="text-add-title"
                >
                  Add
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#676c7a",
                    "height": 48,
                    "width": 0.5,
                  },
                ]
              }
            />
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "height": 80,
                  "justifyContent": "center",
                  "opacity": 1,
                  "width": "50%",
                }
              }
              testID="btn-chat"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 80,
                    "justifyContent": "center",
                    "width": "50%",
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#676c7a",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#2F38C7",
                      },
                    ]
                  }
                >
                  Chat
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
